{"version":3,"sources":["utils/API.js","components/BookTile/BookTile.js","pages/Main.js","pages/Saved.js","pages/NoMatch.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["API","query","axios","get","concat","id","delete","then","res","data","bookData","post","BookTile","_ref","title","thumbnail","authors","description","infoLink","deleteButton","react_default","a","createElement","Card","key","className","Container","style","width","height","Row","Col","Img","alt","src","href","Body","Button","onClick","alert","catch","err","console","error","link","image","Main","_useState","useState","_useState2","Object","slicedToArray","setQuery","_useState3","_useState4","tiles","setTiles","handleSubmit","items","log","response","Jumbotron","md","Form","Group","size","Control","placeholder","value","onChange","e","target","color","react_router_dom","to","map","item","i","volumeInfo","imageLinks","components_BookTile_BookTile","language","handleTiles","Saved","useEffect","loadBooks","_id","NoMatch","fluid","role","aria-label","Nav","App","components_Nav","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c318992.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getBook: function (query) {\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=40`);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id).then(res => res.data);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData).then(res => res.data);\n  },\n  // Get the saved books from the database\n  getSaved: function () {  // Join megachurch\n    return axios.get(\"/api/books\").then(res => res.data);\n  }\n};","import React, { useState } from 'react';\nimport { Card, Row, Col, Button, Container } from 'react-bootstrap';\nimport API from '../../utils/API';\nimport './BookTile.css';\n\nconst BookTile = ({ id, title, thumbnail, authors, description, infoLink, deleteButton }) => {\n\n\n    const handleSave = () => {\n        API.saveBook({\n            'title': title,\n            'authors': authors,\n            'link': infoLink,\n            'description': description,\n            'image': thumbnail\n        })\n            .then(alert(`${title} saved!`))\n            .catch(err => console.error(err));\n    }\n\n    const handleDelete = () => {\n        API.deleteBook(id)\n            .then(alert(`${title} has been removed`))\n            .catch(err => console.error(err));\n    }\n\n    return (\n        <div>\n            <Card key={id} className='border rounded-sm my-3'>\n                <Container className='p-3' style={{ width: 660, height: 'auto' }}>\n                    <Row>\n                        <Col>\n                            <Card>\n                                <Card.Img alt={title} src={thumbnail} href={infoLink} />\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card.Body>\n                                <h3>{title}</h3>\n                                <h5> by {authors}</h5>\n                                <p className='mt-3'>{description}</p>\n                                {deleteButton\n                                ? <Button onClick={handleDelete}>Delete</Button>\n                                : <Button onClick={handleSave}>Save</Button>\n                            }\n                            </Card.Body>\n                        </Col>\n                    </Row>\n                </Container>\n            </Card>\n        </div>\n    )\n}\n\nexport default BookTile;\n","import React, { useState } from 'react';\nimport API from '../utils/API';\nimport { Link } from 'react-router-dom';\nimport BookTile from '../components/BookTile/BookTile.js';\nimport {\n  Container,\n  Jumbotron,\n  Form,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nconst Main = () => {\n\n  // States\n  const [query, setQuery] = useState('');\n  const [tiles, setTiles] = useState([]);\n\n\n  // Handle Search\n  const handleSubmit = () => {\n    API.getBook(query)\n      .then(res => {\n        setTiles(res.data.items);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  };\n\n  // Searchbar\n  const searchBar = () => {\n    return (\n      <Jumbotron className='text-center'>\n        <Row>\n          <Col md={3} />\n          <Col md={6}>\n            <div>\n              <h1>(React) Google Book Search</h1>\n              <h4>Search and save books to your personal library.</h4>\n            </div>\n            <Form className='mt-5'>\n              <Form.Group size='lg' className='mb-3'>\n                <Form.Control\n                  placeholder='Book Search'\n                  value={query}\n                  onChange={e => setQuery(e.target.value)}\n                />\n                  <Button className='mt-3' color='secondary' onClick={handleSubmit}>\n                    Search\n                </Button>\n                <div className='mt-3'>\n                  <Link to='/saved'><h5>Go to my library.</h5></Link>\n                </div>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md={3} />\n        </Row>\n      </Jumbotron>\n\n    );\n  };\n\n  //Construct book tiles\n  const handleTiles = () => {\n    const items = tiles.map((item, i) => {\n      let thumbnail = '';\n      if (item.volumeInfo.imageLinks) {\n        thumbnail = item.volumeInfo.imageLinks.thumbnail;\n      }\n\n      return (\n        <Row>\n          <BookTile\n            key={item.volumeInfo.id} \n            thumbnail={thumbnail}\n            title={item.volumeInfo.title}\n            language={item.volumeInfo.language}\n            authors={item.volumeInfo.authors}\n            description={item.volumeInfo.description}\n            infoLink={item.volumeInfo.infoLink}\n            deleteButton={false}\n          />\n        </Row>\n      );\n    });\n    return (\n      <Row>{items}</Row>\n    );\n  };\n\n\n  return (\n    <div>\n      {searchBar()}\n      <Container>\n        <Col md={3} />\n        <Col md={6} className='mx-auto'>{handleTiles()}</Col>\n        <Col md={3} />\n      </Container>\n    </div>\n  );\n}\n\n\nexport default Main;\n","import React, { useState, useEffect } from \"react\";\nimport API from \"../utils/API\";\nimport BookTile from '../components/BookTile/BookTile.js';\nimport {\n  Jumbotron,\n  Container,\n  Row,\n  Col\n} from \"react-bootstrap\";\n\nconst Saved = () => {\n  const [tiles, setTiles] = useState([]);\n\n  useEffect(() => {\n    loadBooks();\n  });\n\n  // Handle Search\n  const loadBooks = () => {\n    API.getSaved()\n      .then(res => {\n        setTiles(res);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  };\n\n  //Construct book tiles\n  const handleTiles = () => {\n    const items = tiles.map((item, i) => {\n      let thumbnail = '';\n      if (item.image) {\n        thumbnail = item.image;\n      }\n\n      return (\n        <Row>\n          <BookTile\n            thumbnail={thumbnail}\n            title={item.title}\n            language={item.language}\n            authors={item.authors}\n            description={item.description}\n            infoLink={item.infoLink}\n            deleteButton={true}\n            id={item._id}\n          />\n        </Row>\n      );\n    });\n    return (\n      <Row>{items}</Row>\n    );\n  };\n\n  return (\n    <div>\n      <Jumbotron>\n        <Row>\n          <Col md={3} />\n          <Col md={6} className='text-center'>\n            <h1>My Library</h1>\n          </Col>\n          <Col md={3} />\n        </Row>\n      </Jumbotron>\n      <div>\n        <Container>\n        <Col md={3} />\n        <Col md={6} className='mx-auto'>{handleTiles()}</Col>\n        <Col md={3} />\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Saved;","import React from 'react';\nimport { Jumbotron, Col, Row, Container } from 'react-bootstrap';\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size='md-12'>\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role='img' aria-label='Face With Rolling Eyes Emoji'>\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-dark bg-primary'>\n    <a className='navbar-brand ml-2' href='/saved'>\n        My Library\n      </a>\n      <a className='navbar-brand px-3' href='/'>\n       Search\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Saved from \"./pages/Saved\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\n//import Searchbar from \"./pages/Searchbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/search\" component={Main} />\n           <Route exact path=\"/saved\" component={Saved} />\n          <Route exact path=\"/noMatch\" component={NoMatch} />\n      </div>\n    </Router>\n  )\n  };\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();"],"sourceRoot":""}