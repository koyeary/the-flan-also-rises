{"ast":null,"code":"import _slicedToArray from \"/Users/katherineyeary/Desktop/Always_Be_Coding/the-flan-also-rises/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/katherineyeary/Desktop/Always_Be_Coding/the-flan-also-rises/client/src/pages/Main.js\";\n\nimport React, { useState, useEffect } from \"react\"; //import { Jumbotron, Container, Col, Row } from 'react-bootstrap';\n\nimport API from \"../utils/API\"; //import Searchbar from './Searchbar';\n//import Results from '../components/Results';\n//import Form from '../components/Form'; */\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport BookTile from '../components/BookTile.js';\nimport { Container, Jumbotron, Form, Button, Spinner, Row, Col, CardColumns } from \"react-bootstrap\";\n\nvar Main = function Main() {\n  // States\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tiles = _useState6[0],\n      setTiles = _useState6[1]; // Handle Search\n\n\n  var handleSubmit = function handleSubmit() {\n    API.getBook(query).then(function (res) {\n      setTiles(res.data.items);\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err.response);\n    });\n  }; // Main Show Case\n\n\n  var mainHeader = function mainHeader() {\n    return /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      size: \"lg\",\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Book Search\",\n      value: query,\n      onChange: function onChange(e) {\n        return setQuery(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-search\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var handleTiles = function handleTiles() {\n    var items = tiles.map(function (item, i) {\n      var thumbnail = '';\n\n      if (item.volumeInfo.imageLinks) {\n        thumbnail = item.volumeInfo.imageLinks.thumbnail;\n      }\n\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(BookTile, {\n        id: item.volumeInfo.id,\n        thumbnail: thumbnail,\n        title: item.volumeInfo.title,\n        language: item.volumeInfo.language,\n        authors: item.volumeInfo.authors,\n        description: item.volumeInfo.description,\n        infoLink: item.volumeInfo.infoLink,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, items);\n  }; //};\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, mainHeader(), /*#__PURE__*/React.createElement(Container, {\n    className: \"p-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, handleTiles()));\n}; // Setting our component's initial state\n//const [books, setBooks] = useState([]);\n//const [formObject, setFormObject] = useState({})\n// Load all books and store them with setBooks\n\n/*    useEffect(() => {\n    searchBook();\n  }); */\n\n/*   function bookData () {\n    return {\n        title: books.volumeInfo.title,\n        authors: books.volumeInfo.authors,\n        link: books.volumeInfo.infoLink,\n        description: books.volumeInfo.description,\n        image: books.volumeInfo.imageLinks.thumbnail,\n        googleId: books.id\n    } */\n\n/*   // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  } */\n\n/*  function searchBook (query) {\n    API.getBook(query)\n        .then(res => setBooks({ books: res.data.items.map(info => bookData(info)) }))\n        .catch(err => console.error(err));\n}; */\n// Handles updating component state when the user types into the input field\n\n/*   function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  }; */\n// When the form is submitted, use the API.saveBook method to save the book data\n// Then reload books from the database\n\n/*   function handleFormSubmit(event) {\n    event.preventDefault();\n    searchBook();\n  }; */\n\n/*   return (\n    <div>\n      <Jumbotron>\n        <Row>\n          <Col md={3} />\n          <Col md={6}>\n            <Searchbar />\n          </Col>\n          <Col md={3} />\n        </Row>\n      </Jumbotron>\n      <Container>\n        <Results />\n      </Container>\n    </div>\n  )\n  } */\n\n\nexport default Main;","map":{"version":3,"sources":["/Users/katherineyeary/Desktop/Always_Be_Coding/the-flan-also-rises/client/src/pages/Main.js"],"names":["React","useState","useEffect","API","ToastContainer","toast","axios","BookTile","Container","Jumbotron","Form","Button","Spinner","Row","Col","CardColumns","Main","query","setQuery","loading","setLoading","tiles","setTiles","handleSubmit","getBook","then","res","data","items","catch","err","console","log","response","mainHeader","e","target","value","handleTiles","map","item","i","thumbnail","volumeInfo","imageLinks","id","title","language","authors","description","infoLink"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CACA;AACA;AACA;;AAEA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsDC,GAAtD,EAA2DC,GAA3D,EAAgEC,WAAhE,QAAmF,iBAAnF;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjB;AAFiB,kBAGSf,QAAQ,CAAC,EAAD,CAHjB;AAAA;AAAA,MAGVgB,KAHU;AAAA,MAGHC,QAHG;;AAAA,mBAIajB,QAAQ,CAAC,KAAD,CAJrB;AAAA;AAAA,MAIVkB,OAJU;AAAA,MAIDC,UAJC;;AAAA,mBAKSnB,QAAQ,CAAC,EAAD,CALjB;AAAA;AAAA,MAKVoB,KALU;AAAA,MAKHC,QALG,kBAMjB;;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBpB,IAAAA,GAAG,CAACqB,OAAJ,CAAYP,KAAZ,EACGQ,IADH,CACQ,UAAAC,GAAG,EAAI;AAEXJ,MAAAA,QAAQ,CAACI,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,EAMGS,KANH,CAMS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACD,KARH;AASD,GAVD,CAPiB,CAmBjB;;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,WAAW,EAAC,aADd;AAEE,MAAA,KAAK,EAAEjB,KAFT;AAGE,MAAA,QAAQ,EAAE,kBAAAkB,CAAC;AAAA,eAAIjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAEd,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADF,CADF,CAFF,eAgBE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF,CADF;AAuBD,GAxBD;;AA0BA,MAAMe,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMV,KAAK,GAAGP,KAAK,CAACkB,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AACnC,UAAIC,SAAS,GAAG,EAAhB;;AACA,UAAIF,IAAI,CAACG,UAAL,CAAgBC,UAApB,EAAgC;AAC9BF,QAAAA,SAAS,GAAGF,IAAI,CAACG,UAAL,CAAgBC,UAAhB,CAA2BF,SAAvC;AACD;;AAED,0BACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAEF,IAAI,CAACG,UAAL,CAAgBE,EADtB;AAEE,QAAA,SAAS,EAAEH,SAFb;AAGE,QAAA,KAAK,EAAEF,IAAI,CAACG,UAAL,CAAgBG,KAHzB;AAIE,QAAA,QAAQ,EAAEN,IAAI,CAACG,UAAL,CAAgBI,QAJ5B;AAKE,QAAA,OAAO,EAAEP,IAAI,CAACG,UAAL,CAAgBK,OAL3B;AAME,QAAA,WAAW,EAAER,IAAI,CAACG,UAAL,CAAgBM,WAN/B;AAOE,QAAA,QAAQ,EAAET,IAAI,CAACG,UAAL,CAAgBO,QAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAaD,KAnBa,CAAd;AAoBA,wBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMtB,KAAN,CADF;AAGD,GAxBD,CA9CiB,CAuEjB;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,UAAU,EADb,eAEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,WAAW,EADd,CAFF,CADF;AAQD,CAhFD,C,CAmFA;AACA;AACA;AAEA;;AACA;;;;AAIA;;;;;;;;;;AAUA;;;;;;;AAOA;;;;;AAMA;;AACA;;;;AAKA;AACA;;AACA;;;;;AAKA;;;;;;;;;;;;;;;;;;;AAkBA,eAAetB,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n//import { Jumbotron, Container, Col, Row } from 'react-bootstrap';\nimport API from \"../utils/API\";\n//import Searchbar from './Searchbar';\n//import Results from '../components/Results';\n//import Form from '../components/Form'; */\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport BookTile from '../components/BookTile.js';\nimport { Container, Jumbotron, Form, Button, Spinner, Row, Col, CardColumns } from \"react-bootstrap\";\n\nconst Main = () => {\n\n  // States\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [tiles, setTiles] = useState([]);\n  // Handle Search\n  const handleSubmit = () => {\n    API.getBook(query)\n      .then(res => {\n\n        setTiles(res.data.items);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.log(err.response);\n      });\n  };\n\n  // Main Show Case\n  const mainHeader = () => {\n    return (\n      <Jumbotron>\n        <Row>\n          <Col md={3} />\n          <Col md={6}>\n            <Form>\n              <Form.Group size='lg' className='mb-3'>\n                <Form.Control\n                  placeholder='Book Search'\n                  value={query}\n                  onChange={e => setQuery(e.target.value)}\n                />\n                <Button color='secondary' onClick={handleSubmit}>\n                  <i className='fas fa-search'></i>\n                </Button>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md={3} />\n        </Row>\n      </Jumbotron>\n\n    );\n  };\n\n  const handleTiles = () => {\n    const items = tiles.map((item, i) => {\n      let thumbnail = '';\n      if (item.volumeInfo.imageLinks) {\n        thumbnail = item.volumeInfo.imageLinks.thumbnail;\n      }\n\n      return (\n        <Row>\n          <BookTile\n            id={item.volumeInfo.id}\n            thumbnail={thumbnail}\n            title={item.volumeInfo.title}\n            language={item.volumeInfo.language}\n            authors={item.volumeInfo.authors}\n            description={item.volumeInfo.description}\n            infoLink={item.volumeInfo.infoLink}\n          />\n        </Row>\n      );\n    });\n    return (\n      <Row>{items}</Row>\n    );\n  };\n  //};\n  return (\n    <div>\n      {mainHeader()}\n      <Container className='p-3'>\n        {handleTiles()}\n      </Container>\n    </div>\n  );\n}\n\n\n// Setting our component's initial state\n//const [books, setBooks] = useState([]);\n//const [formObject, setFormObject] = useState({})\n\n// Load all books and store them with setBooks\n/*    useEffect(() => {\n    searchBook();\n  }); */\n\n/*   function bookData () {\n    return {\n        title: books.volumeInfo.title,\n        authors: books.volumeInfo.authors,\n        link: books.volumeInfo.infoLink,\n        description: books.volumeInfo.description,\n        image: books.volumeInfo.imageLinks.thumbnail,\n        googleId: books.id\n    } */\n\n/*   // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  } */\n\n/*  function searchBook (query) {\n    API.getBook(query)\n        .then(res => setBooks({ books: res.data.items.map(info => bookData(info)) }))\n        .catch(err => console.error(err));\n}; */\n\n// Handles updating component state when the user types into the input field\n/*   function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  }; */\n\n// When the form is submitted, use the API.saveBook method to save the book data\n// Then reload books from the database\n/*   function handleFormSubmit(event) {\n    event.preventDefault();\n    searchBook();\n  }; */\n\n/*   return (\n    <div>\n      <Jumbotron>\n        <Row>\n          <Col md={3} />\n          <Col md={6}>\n            <Searchbar />\n          </Col>\n          <Col md={3} />\n        </Row>\n      </Jumbotron>\n      <Container>\n        <Results />\n      </Container>\n    </div>\n  )\n  } */\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}