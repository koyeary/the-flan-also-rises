{"ast":null,"code":"import _slicedToArray from \"/Users/katherineyeary/Desktop/Always_Be_Coding/the-flan-also-rises/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/katherineyeary/Desktop/Always_Be_Coding/the-flan-also-rises/client/src/pages/Main.js\";\n\nimport React, { useState, useEffect } from \"react\"; //import { Jumbotron, Container, Col, Row } from 'react-bootstrap';\n\nimport API from \"../utils/API\"; //import Searchbar from './Searchbar';\n//import Results from '../components/Results';\n//import Form from '../components/Form'; */\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport BookTile from '../components/BookTile.js';\nimport { Form, Button, Spinner } from \"react-bootstrap\";\n\nvar Main = function Main() {\n  // States\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tiles = _useState6[0],\n      setTiles = _useState6[1]; // Handle Search\n\n\n  var handleSubmit = function handleSubmit() {\n    setLoading(true);\n    /*         axios\n              .get(\n                `https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=10&startIndex=1`\n              ) */\n\n    API.getBook(query).then(function (res) {\n      /*             if (startIndex >= res.data.totalItems || startIndex < 1) {\n                    toast.error(\n                      `max reults must be between 1 and ${res.data.totalItems}`\n                    );\n                  } else {\n                    if (res.data.items.length > 0) { */\n      setTiles(res.data.items);\n      setLoading(false);\n    })\n    /*   }\n    }) */\n    .catch(function (err) {\n      setLoading(true);\n      console.log(err.response);\n    });\n  }; // Main Show Case\n\n\n  var mainHeader = function mainHeader() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-image d-flex justify-content-center align-items-center flex-column\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-2 text-center text-white mb-3\",\n      style: {\n        zIndex: 2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Google Books\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '60%',\n        zIndex: 2\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      size: \"lg\",\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Book Search\",\n      value: query,\n      onChange: function onChange(e) {\n        return setQuery(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-search\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }))))));\n  };\n\n  var handleTiles = function handleTiles() {\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-center mt-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        style: {\n          width: '3rem',\n          height: '3rem'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }));\n    } else {\n      var items = tiles.map(function (item, i) {\n        var thumbnail = '';\n\n        if (item.volumeInfo.imageLinks) {\n          thumbnail = item.volumeInfo.imageLinks.thumbnail;\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-4 mb-3\",\n          key: item.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(BookTile, {\n          thumbnail: thumbnail,\n          title: item.volumeInfo.title,\n          pageCount: item.volumeInfo.pageCount,\n          language: item.volumeInfo.language,\n          authors: item.volumeInfo.authors,\n          publisher: item.volumeInfo.publisher,\n          description: item.volumeInfo.description,\n          previewLink: item.volumeInfo.previewLink,\n          infoLink: item.volumeInfo.infoLink,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }\n        }));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container my-5\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, items));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, mainHeader(), handleTiles(), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }));\n}; // Setting our component's initial state\n//const [books, setBooks] = useState([]);\n//const [formObject, setFormObject] = useState({})\n// Load all books and store them with setBooks\n\n/*    useEffect(() => {\n    searchBook();\n  }); */\n\n/*   function bookData () {\n    return {\n        title: books.volumeInfo.title,\n        authors: books.volumeInfo.authors,\n        link: books.volumeInfo.infoLink,\n        description: books.volumeInfo.description,\n        image: books.volumeInfo.imageLinks.thumbnail,\n        googleId: books.id\n    } */\n\n/*   // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  } */\n\n/*  function searchBook (query) {\n    API.getBook(query)\n        .then(res => setBooks({ books: res.data.items.map(info => bookData(info)) }))\n        .catch(err => console.error(err));\n}; */\n// Handles updating component state when the user types into the input field\n\n/*   function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  }; */\n// When the form is submitted, use the API.saveBook method to save the book data\n// Then reload books from the database\n\n/*   function handleFormSubmit(event) {\n    event.preventDefault();\n    searchBook();\n  }; */\n\n/*   return (\n    <div>\n      <Jumbotron>\n        <Row>\n          <Col md={3} />\n          <Col md={6}>\n            <Searchbar />\n          </Col>\n          <Col md={3} />\n        </Row>\n      </Jumbotron>\n      <Container>\n        <Results />\n      </Container>\n    </div>\n  )\n  } */\n\n\nexport default Main;","map":{"version":3,"sources":["/Users/katherineyeary/Desktop/Always_Be_Coding/the-flan-also-rises/client/src/pages/Main.js"],"names":["React","useState","useEffect","API","ToastContainer","toast","axios","BookTile","Form","Button","Spinner","Main","query","setQuery","loading","setLoading","tiles","setTiles","handleSubmit","getBook","then","res","data","items","catch","err","console","log","response","mainHeader","zIndex","width","e","target","value","handleTiles","height","map","item","i","thumbnail","volumeInfo","imageLinks","id","title","pageCount","language","authors","publisher","description","previewLink","infoLink"],"mappings":"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","sourcesContent":[" import React, { useState, useEffect } from \"react\";\n//import { Jumbotron, Container, Col, Row } from 'react-bootstrap';\nimport API from \"../utils/API\";\n//import Searchbar from './Searchbar';\n//import Results from '../components/Results';\n//import Form from '../components/Form'; */\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport BookTile from '../components/BookTile.js';\nimport { Form, Button, Spinner } from \"react-bootstrap\";\n\nconst Main = () => {\n\n    // States\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [tiles, setTiles] = useState([]);\n    // Handle Search\n    const handleSubmit = () => {\n      setLoading(true);\n/*         axios\n          .get(\n            `https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=10&startIndex=1`\n          ) */\n          API.getBook(query)\n          .then(res => {\n/*             if (startIndex >= res.data.totalItems || startIndex < 1) {\n              toast.error(\n                `max reults must be between 1 and ${res.data.totalItems}`\n              );\n            } else {\n              if (res.data.items.length > 0) { */\n                setTiles(res.data.items);\n                setLoading(false);\n              })\n          /*   }\n          }) */\n          .catch(err => {\n            setLoading(true);\n            console.log(err.response);\n          });\n      };\n    \n    // Main Show Case\n    const mainHeader = () => {\n      return (\n        <div className='main-image d-flex justify-content-center align-items-center flex-column'>\n          {/* Overlay */}\n          <div className='filter'></div>\n          <h1\n            className='display-2 text-center text-white mb-3'\n            style={{ zIndex: 2 }}\n          >\n            Google Books\n          </h1>\n          <div style={{ width: '60%', zIndex: 2 }}>\n          <Form>\n            <Form.Group size='lg' className='mb-3'>\n              <Form.Control\n                placeholder='Book Search'\n                value={query}\n                onChange={e => setQuery(e.target.value)}\n              />\n                <Button color='secondary' onClick={handleSubmit}>\n                  <i className='fas fa-search'></i>\n                </Button>\n            </Form.Group>\n            </Form>\n          </div>\n        </div>\n      );\n    };\n  \n    const handleTiles = () => {\n      if (loading) {\n        return (\n          <div className='d-flex justify-content-center mt-3'>\n            <Spinner style={{ width: '3rem', height: '3rem' }} />\n          </div>\n        );\n      } else {\n        const items = tiles.map((item, i) => {\n          let thumbnail = '';\n          if (item.volumeInfo.imageLinks) {\n            thumbnail = item.volumeInfo.imageLinks.thumbnail;\n          }\n  \n          return (\n            <div className='col-lg-4 mb-3' key={item.id}>\n              <BookTile\n                thumbnail={thumbnail}\n                title={item.volumeInfo.title}\n                pageCount={item.volumeInfo.pageCount}\n                language={item.volumeInfo.language}\n                authors={item.volumeInfo.authors}\n                publisher={item.volumeInfo.publisher}\n                description={item.volumeInfo.description}\n                previewLink={item.volumeInfo.previewLink}\n                infoLink={item.volumeInfo.infoLink}\n              />\n            </div>\n          );\n        });\n        return (\n          <div className='container my-5'>\n            <div className='row'>{items}</div>\n          </div>\n        );\n      }\n    };\n    return (\n      <div className='w-100 h-100'>\n        {mainHeader()}\n        {handleTiles()}\n        <ToastContainer />\n      </div>\n    );\n  }\n\n  \n  // Setting our component's initial state\n  //const [books, setBooks] = useState([]);\n  //const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n  /*    useEffect(() => {\n      searchBook();\n    }); */\n\n  /*   function bookData () {\n      return {\n          title: books.volumeInfo.title,\n          authors: books.volumeInfo.authors,\n          link: books.volumeInfo.infoLink,\n          description: books.volumeInfo.description,\n          image: books.volumeInfo.imageLinks.thumbnail,\n          googleId: books.id\n      } */\n\n  /*   // Deletes a book from the database with a given id, then reloads books from the db\n    function deleteBook(id) {\n      API.deleteBook(id)\n        .then(res => loadBooks())\n        .catch(err => console.log(err));\n    } */\n\n  /*  function searchBook (query) {\n      API.getBook(query)\n          .then(res => setBooks({ books: res.data.items.map(info => bookData(info)) }))\n          .catch(err => console.error(err));\n  }; */\n\n  // Handles updating component state when the user types into the input field\n  /*   function handleInputChange(event) {\n      const { name, value } = event.target;\n      setFormObject({...formObject, [name]: value})\n    }; */\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  /*   function handleFormSubmit(event) {\n      event.preventDefault();\n      searchBook();\n    }; */\n\n/*   return (\n    <div>\n      <Jumbotron>\n        <Row>\n          <Col md={3} />\n          <Col md={6}>\n            <Searchbar />\n          </Col>\n          <Col md={3} />\n        </Row>\n      </Jumbotron>\n      <Container>\n        <Results />\n      </Container>\n    </div>\n  )\n  } */\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}